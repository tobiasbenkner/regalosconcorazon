<style>

    #regForm {
        padding: 40px;
        width: 100%;
    }

    input {
        padding: 10px;
        width: 100%;
        font-size: 17px;
        border: 1px solid #aaaaaa;
    }

    select {
        padding: 10px;
        width: 100%;
        font-size: 17px;
        border: 1px solid #aaaaaa;
    }

    /* Mark input boxes that gets an error on validation: */
    input.invalid {
        background-color: #ffdddd;
    }

    /* Hide all steps by default: */
    .tab {
        display: none;
    }

    button {
        background-color: #04AA6D;
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        font-size: 17px;
        cursor: pointer;
    }

    button:hover {
        opacity: 0.8;
    }

    #prevBtn {
        background-color: #bbbbbb;
    }

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbbbbb;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
    }

    .step.active {
        opacity: 1;
    }

    /* Mark the steps that are finished and valid: */
    .step.finish {
        background-color: #04AA6D;
    }
</style>

<div class="page-width">

    <form id="regForm">
        <!-- One "tab" for each step in the form: -->
        <div class="tab">
            <h2 style="text-align: center">Elija su empaque</h2>
            <p>
                <img id="boxImage" style="object-fit: contain" alt="Empaque" height="250" width="100%" src="https://cdn.shopify.com/s/files/1/0625/1970/5823/products/presents-g01acb60ae_640.jpg?v=1644770211" />
            </p>
            <p>
                <select name="selectBox" id="selectBox" onchange="changeBox()">
                </select>
            </p>
        </div>

        <div class="tab">
            <h2>Elija sus productos</h2>
            <p><input placeholder="E-mail..." oninput="this.className = ''" name="email"></p>
            <p><input placeholder="Phone..." oninput="this.className = ''" name="phone"></p>
        </div>

        <div class="tab">
            <h2>Confirmar la decoraci√≥n</h2>
            <p><input placeholder="dd" oninput="this.className = ''" name="dd"></p>
            <p><input placeholder="mm" oninput="this.className = ''" name="nn"></p>
            <p><input placeholder="yyyy" oninput="this.className = ''" name="yyyy"></p>
        </div>

        <div class="tab">
            <h2>Finalizar</h2>
            <p><input placeholder="Username..." oninput="this.className = ''" name="uname"></p>
            <p><input placeholder="Password..." oninput="this.className = ''" name="pword" type="password"></p>
        </div>

        <div style="overflow:auto;">
            <div style="float:right;">
                <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
                <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
            </div>
        </div>

        <!-- Circles which indicates the steps of the form: -->
        <div style="text-align:center;margin-top:40px;">
            <span class="step"></span>
            <span class="step"></span>
            <span class="step"></span>
            <span class="step"></span>
        </div>
    </form>
</div>

<script>

    const boxes = [];
    {%  for variant in section.settings.servicio.variants %}
    boxes.push({
        id: "{{ variant.id }}",
        image: "{{ variant.featured_image.src | img_url: '400x400' }}",
        title: "{{ variant.title }}",
        volume: JSON.parse('{{variant.metafields.my_fields.volumen}}'),
    });
    {% endfor %}

    console.log(boxes);

    (function() {

        // genereate boxes
        const selectBox = document.getElementById("selectBox")
        for (let box of boxes) {
            const option = document.createElement('option');
            option.value = box.id;
            option.innerText = box.title;
            selectBox.appendChild(option);
        }

        // get stored box
        let myBox = localStorage.getItem('my-box');
        if(!myBox){
            return;
        }

        try {
            myBox = JSON.parse(myBox)
        } catch (e) {
            localStorage.removeItem('my-box');
            return;
        }

        // select stored box
        console.log("stored box", myBox);
    })();

    function changeBox() {
        const id = document.getElementById("selectBox").value;
        const found = boxes.find(it => it.id === id);
        if(!found) {
            return;
        }

        const boxImage = document.getElementById("boxImage");
        boxImage.src = found.image;

        localStorage.setItem('my-box', JSON.stringify(found));
    }

</script>


<script>
    var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the current tab

    function showTab(n) {
        // This function will display the specified tab of the form...
        var x = document.getElementsByClassName("tab");
        x[n].style.display = "block";
        //... and fix the Previous/Next buttons:
        if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
        } else {
            document.getElementById("prevBtn").style.display = "inline";
        }
        if (n == (x.length - 1)) {
            document.getElementById("nextBtn").innerHTML = "Submit";
        } else {
            document.getElementById("nextBtn").innerHTML = "Next";
        }
        //... and run a function that will display the correct step indicator:
        fixStepIndicator(n)
    }

    function nextPrev(n) {
        // This function will figure out which tab to display
        var x = document.getElementsByClassName("tab");
        // Exit the function if any field in the current tab is invalid:
        if (n == 1 && !validateForm()) return false;
        // Hide the current tab:
        x[currentTab].style.display = "none";
        // Increase or decrease the current tab by 1:
        currentTab = currentTab + n;
        // if you have reached the end of the form...
        if (currentTab >= x.length) {
            // ... the form gets submitted:
            document.getElementById("regForm").submit();
            return false;
        }
        // Otherwise, display the correct tab:
        showTab(currentTab);
    }

    function validateForm() {
        // This function deals with validation of the form fields
        var x, y, i, valid = true;
        x = document.getElementsByClassName("tab");
        y = x[currentTab].getElementsByTagName("input");
        // A loop that checks every input field in the current tab:
        for (i = 0; i < y.length; i++) {
            // If a field is empty...
            if (y[i].value == "") {
                // add an "invalid" class to the field:
                y[i].className += " invalid";
                // and set the current valid status to false
                valid = false;
            }
        }
        // If the valid status is true, mark the step as finished and valid:
        if (valid) {
            document.getElementsByClassName("step")[currentTab].className += " finish";
        }
        return valid; // return the valid status
    }

    function fixStepIndicator(n) {
        // This function removes the "active" class of all steps...
        var i, x = document.getElementsByClassName("step");
        for (i = 0; i < x.length; i++) {
            x[i].className = x[i].className.replace(" active", "");
        }
        //... and adds the "active" class on the current step:
        x[n].className += " active";
    }
</script>


{% schema %}
{
    "name": "custom-personalizar",
    "settings": [
        {
            "type": "product",
            "id": "servicio",
            "label": "Servicio"
        }
    ],
    "presets": [
        {
            "name": "Custom Personalizar"
        }
    ]
}
{% endschema %}