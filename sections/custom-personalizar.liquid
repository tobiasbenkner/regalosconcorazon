<style>

    .product-container {
        display: grid;
        grid-gap: 10px;
        grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    }

    #regForm {
        padding: 40px;
        width: 100%;
    }

    input {
        padding: 10px;
        width: 100%;
        font-size: 17px;
        border: 1px solid #aaaaaa;
    }

    select {
        padding: 10px;
        width: 100%;
        font-size: 17px;
        border: 1px solid #aaaaaa;
    }

    /* Mark input boxes that gets an error on validation: */
    input.invalid {
        background-color: #ffdddd;
    }

    /* Hide all steps by default: */
    .tab {
        display: none;
    }

    button {
        background-color: #04AA6D;
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        font-size: 17px;
        cursor: pointer;
    }

    button:hover {
        opacity: 0.8;
    }

    #prevBtn {
        background-color: #bbbbbb;
    }

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbbbbb;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
    }

    .step.active {
        opacity: 1;
    }

    /* Mark the steps that are finished and valid: */
    .step.finish {
        background-color: #04AA6D;
    }
</style>

<div class="page-width">

    <form id="regForm">
        <!-- One "tab" for each step in the form: -->
        <div class="tab">
            <h2 style="text-align: center">Elija su empaque</h2>
            <p>
                <img id="boxImage" style="object-fit: contain" alt="Empaque" height="250" width="100%" src="https://cdn.shopify.com/s/files/1/0625/1970/5823/products/presents-g01acb60ae_640.jpg?v=1644770211" />
            </p>
            <p>
                <select name="selectBox" id="selectBox" onchange="changeBox()">
                </select>
            </p>
        </div>

        <div class="tab">
            <h2 style="text-align: center">Elija sus productos</h2>
            <input style="margin-bottom: 20px"
                   type="text"
                   id="searchInput"
                   onkeyup="search()"
                   placeholder="Buscar"
            />
            <div id="product-container" class="product-container"></div>
        </div>

        <div class="tab">
            <h2 style="text-align: center">Mensaje personal</h2>
            <p style="text-align: center">imprimiremos su mensaje en una tarjeta y la incluiremos en su regalo.</p>
            <p>
                <textarea style="width: 100%; padding: 10px" rows="5" maxlength="150"></textarea>
            </p>
        </div>

        <div class="tab">
            <h2 style="text-align: center">Finalizar</h2>
            <h3><strong>Embalaje</strong></h3>
            <br/>

            <h3><strong>Productos</strong></h3>
            <br/>

            <h3><strong>Mesaje</strong></h3>
            <p>asd adsda da ad</p>
            <br/>

            <h3><strong>Serivio</strong></h3>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
        </div>

        <div style="overflow:auto;">
            <div style="float:right;">
                <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
                <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
            </div>
        </div>

        <!-- Circles which indicates the steps of the form: -->
        <div style="text-align:center;margin-top:40px;">
            <span class="step"></span>
            <span class="step"></span>
            <span class="step"></span>
            <span class="step"></span>
        </div>
    </form>
</div>

<script>

    const boxes = [];
    {%  for variant in section.settings.servicio.variants %}
    boxes.push({
        id: "{{ variant.id }}",
        image: "{{ variant.featured_image.src | img_url: '400x400' }}",
        title: "{{ variant.title }}",
        volume: JSON.parse('{{variant.metafields.my_fields.volumen}}'),
    });
    {% endfor %}


    const despensa = [];
    {%  for product in section.settings.despensa.products %}
    despensa.push({
        id: "{{ product.id }}",
        title: "{{ product.title }}",
        collections: "{{ product.collections }}",
        image: "{{ product.images[0].src | img_url }}",
    });
    {% endfor %}
    console.log(despensa);


    (function() {

        // genereate boxes
        const selectBox = document.getElementById("selectBox")
        for (let box of boxes) {
            const option = document.createElement('option');
            option.value = box.id;
            option.innerText = box.title;
            selectBox.appendChild(option);
        }


        const myBox = getBox();
        if(myBox) {
            // select item
            selectBox.value = found.id;
            const boxImage = document.getElementById("boxImage");
            boxImage.src = found.image;
        } else {
            // set first item as selected item
        }


        // generate products
        search();



    })();

    function changeBox() {
        const id = document.getElementById("selectBox").value;
        const found = boxes.find(it => it.id === id);
        if(!found) {
            return;
        }

        const boxImage = document.getElementById("boxImage");
        boxImage.src = found.image;

        addBox(found);
    }

    function search() {
        const searchInput = document.getElementById("searchInput")
        const filter = (searchInput.value || "").trim().toLowerCase();

        const prodcuts = filter ? despensa.filter(it => it.title.toLowerCase().includes(filter)) : despensa;
        prodcuts.sort((a, b) => a.title.localeCompare(b.title));

        const items = prodcuts.map(product => {
           return `<div style="display: flex; flex-direction: column; padding-bottom: 40px;">
                    <img width="100%" height="150" style="object-fit: contain" src="${product.image}" />
                    <div style="display: flex; justify-content: space-between; margin-top: 10px; margin-bottom: 10px;">
                        <div><button>-</button></div>
                        <div><input style="text-align: center; width: 50px;" value="0" /></div>
                        <div><button>+</button></div>
                    </div>
                    <span style="text-align: center; flex: 1">${product.title}</span>

                </div>`;
        });
        const container = document.getElementById("product-container");
        container.innerHTML = items.join("");
    }

    const boxKey = "my-box";
    function getBox() {
        try {
            let box = localStorage.getItem(boxKey);
            if(!box){
                return null;
            }

            const boxObj = JSON.parse(box);

            const found = boxes.find(it => it.id === boxObj.id);
            if(!found) {
                deleteBox()
                return null;
            }

            return found;
        } catch (e) {
            deleteBox();
            return null;
        }
    }

    function addBox(newBox) {
        localStorage.setItem(boxKey, JSON.stringify(newBox));
    }

    function deleteBox() {
        localStorage.removeItem(newBox);
    }

</script>


<script>
    var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the current tab

    function showTab(n) {
        // This function will display the specified tab of the form...
        var x = document.getElementsByClassName("tab");
        x[n].style.display = "block";
        //... and fix the Previous/Next buttons:
        if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
        } else {
            document.getElementById("prevBtn").style.display = "inline";
        }
        if (n == (x.length - 1)) {
            document.getElementById("nextBtn").innerHTML = "Submit";
        } else {
            document.getElementById("nextBtn").innerHTML = "Next";
        }
        //... and run a function that will display the correct step indicator:
        fixStepIndicator(n)
    }

    function nextPrev(n) {
        // This function will figure out which tab to display
        var x = document.getElementsByClassName("tab");
        // Exit the function if any field in the current tab is invalid:
        // if (n == 1 && !validateForm()) return false;
        // Hide the current tab:
        x[currentTab].style.display = "none";
        // Increase or decrease the current tab by 1:
        currentTab = currentTab + n;
        // if you have reached the end of the form...
        if (currentTab >= x.length) {
            // ... the form gets submitted:
            document.getElementById("regForm").submit();
            return false;
        }
        // Otherwise, display the correct tab:
        showTab(currentTab);
    }

    function fixStepIndicator(n) {
        // This function removes the "active" class of all steps...
        var i, x = document.getElementsByClassName("step");
        for (i = 0; i < x.length; i++) {
            x[i].className = x[i].className.replace(" active", "");
        }
        //... and adds the "active" class on the current step:
        x[n].className += " active";
    }
</script>


{% schema %}
{
    "name": "custom-personalizar",
    "settings": [
        {
            "type": "product",
            "id": "servicio",
            "label": "Servicio"
        },
        {
            "type": "collection",
            "id": "despensa",
            "label": "Despensa"
        }
    ],
    "presets": [
        {
            "name": "Custom Personalizar"
        }
    ]
}
{% endschema %}